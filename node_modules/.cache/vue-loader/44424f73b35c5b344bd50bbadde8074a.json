{"remainingRequest":"/Users/pensereyotdom/Documents/a2a-digital-site/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/pensereyotdom/Documents/a2a-digital-site/src/components/footer/footer.html?vue&type=template&id=278c512f&","dependencies":[{"path":"/Users/pensereyotdom/Documents/a2a-digital-site/src/components/footer/footer.html","mtime":1580723994099},{"path":"/Users/pensereyotdom/Documents/a2a-digital-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pensereyotdom/Documents/a2a-digital-site/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}