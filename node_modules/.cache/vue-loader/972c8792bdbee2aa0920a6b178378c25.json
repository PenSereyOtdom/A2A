{"remainingRequest":"/Users/pensereyotdom/Documents/a2a-digital-site/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/pensereyotdom/Documents/a2a-digital-site/src/components/content-card/content-card.html?vue&type=template&id=28f8a662&scoped=true&","dependencies":[{"path":"/Users/pensereyotdom/Documents/a2a-digital-site/src/components/content-card/content-card.html","mtime":1580263726842},{"path":"/Users/pensereyotdom/Documents/a2a-digital-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pensereyotdom/Documents/a2a-digital-site/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}